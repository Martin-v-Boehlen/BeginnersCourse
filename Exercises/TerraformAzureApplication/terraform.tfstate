{
  "version": 4,
  "terraform_version": "1.1.2",
  "serial": 1,
  "lineage": "fb72569b-1e38-f514-c308-84822b3e2ed6",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "nginx-vm-cloud-init",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "7eff0f0504feef161fb12fa92c6ebefdbd288ad076cbf4f49eca69340ab757f9",
            "rendered": "#!/bin/bash\n# ********************************************************************************************************************************************\n# configure_myphpadmin\n# ********************************************************************************************************************************************\n\nexport NGINX_FQDN=\"mvb4712.westeurope.cloudapp.azure.com\"\nexport DB_FQDN=\"az304-mysql-srv.mysql.database.azure.com\"\nexport DB_USER=\"sqladmin\"\nexport DB_PWD=\"JubjubBird1806!\"\n\necho \"NGINX_FQDN='$NGINX_FQDN'\"\necho \"DB_FQDN='$DB_FQDN'\"\necho \"DB_USER='$DB_USER'\"\necho \"DB_PWD='$DB_PWD'\"\n\n# ************************************************************************\nconfigure_myphpadmin() {\n\nsudo tee /etc/dbconfig-common/phpmyadmin.conf \u003c\u003cEOT\n  # automatically generated by the maintainer scripts of phpmyadmin\n  # any changes you make will be preserved, though your comments\n  # will be lost!  to change your settings you should edit this\n  # file and then run \"dpkg-reconfigure phpmyadmin\"\n  \n  # dbc_install: configure database with dbconfig-common?\n  #              set to anything but \"false\" to opt out of assistance\n  dbc_install='false'\n  \n  # dbc_upgrade: upgrade database with dbconfig-common?\n  #              set to anything but \"false\" to opt out of assistance\n  dbc_upgrade='false'\n  \n  # dbc_remove: deconfigure database with dbconfig-common?\n  #             set to anything but \"false\" to opt out of assistance\n  dbc_remove='false'\nEOT\n  \nsudo tee /etc/phpmyadmin/config-db.php \u003c\u003cEOT\n\u003c?php\n  # !!! dbname is mandatory or login won't work!!!\n  #\n  \\$dbuser='$DB_USER';\n  \\$dbpass='$DB_PWD';\n  \\$basepath='';\n  \\$dbname='phpmyadmin';\n  \\$dbserver='$DB_FQDN';\n  \\$dbport='3306';\n  \\$dbtype='mysql';\n?\u003e\nEOT\n}\n\n# ********************************************************************************************************************************************\n# create_nginx_conf\n# ********************************************************************************************************************************************\n#\ncreate_nginx_conf () {\n# with php\nsudo tee -a /etc/nginx/fastcgi_params \u003c\u003cEOT\n  fastcgi_param  SCRIPT_FILENAME    \\$document_root\\$fastcgi_script_name; \nEOT\n\nsudo tee /etc/nginx/fastcgi.conf \u003c\u003cEOT \n  # 404\n  try_files \\$fastcgi_script_name =404;\n\n  # default fastcgi_params\n  include fastcgi_params;\n\n  # fastcgi settings\n# fastcgi_pass\t\t\tunix:/run/php/php7.2-fpm.sock;\n  fastcgi_index\t\t\tindex.php;\n  fastcgi_buffers\t\t\t8 16k;\n  fastcgi_buffer_size\t\t32k;\n  fastcgi_hide_header             X-Powered-By;\n  fastcgi_hide_header             X-CF-Powered-By;\nEOT\n\nsudo tee /etc/nginx/nginx.conf \u003c\u003cEOT \n  user www-data;\n  worker_processes auto;\n  pid /run/nginx.pid;\n  include /etc/nginx/modules-enabled/*.conf;\n\n  events  {\n    worker_connections 768;\n    # multi_accept on;\n  }\n  \n  http {\n    ##\n    # Basic Settings\n    ##\n  \n    sendfile on;\n    tcp_nopush on;\n    tcp_nodelay on;\n    keepalive_timeout 65;\n    types_hash_max_size 2048;\n    # server_tokens off;\n    # server_names_hash_bucket_size 64;\n    # server_name_in_redirect off;\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n    ##\n    # SSL Settings\n    ##\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n    ssl_prefer_server_ciphers on;\n  \n    ##\n    # Logging Settings\n    ##\n    access_log /var/log/nginx/access.log;\n    error_log /var/log/nginx/error.log;\n    ##\n    # Gzip Settings\n    ##\n    gzip on;\n    # gzip_vary on;\n    # gzip_proxied any;\n    # gzip_comp_level 6;\n    # gzip_buffers 16 8k;\n    # gzip_http_version 1.1;\n    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n    ##\n    # Virtual Host Configs\n    ##\n    include /etc/nginx/conf.d/*.conf;\n    include /etc/nginx/sites-enabled/*;\n  }\nEOT\n\nsudo rm -f /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/$NGINX_FQDN\nsudo mkdir /var/www/$NGINX_FQDN\nsudo tee /etc/nginx/sites-available/$NGINX_FQDN \u003c\u003cEOT \n  # Virtual Host configuration for \n  #\n  # You can move that to a different file under sites-available/ and symlink that\n  # to sites-enabled/ to enable it.\n  #\n  server {\n\n    server_name $NGINX_FQDN;\n\n    root /var/www/$NGINX_FQDN;\n    index index.php;\n\n    location / {\n#         try_files $uri $uri/ =404;\n    }\n  \n    location ~ \\.php$ {\n      try_files \\$uri =404;\n      fastcgi_pass unix:/run/php/php7.2-fpm.sock;\n      fastcgi_index index.php;\n      fastcgi_param SCRIPT_FILENAME \\$document_root\\$fastcgi_script_name;\n      include fastcgi_params;\n      }   \n  }\nEOT\nsudo ln -s /etc/nginx/sites-available/$NGINX_FQDN /etc/nginx/sites-enabled/$NGINX_FQDN\n}\n\n# ********************************************************************************************************************************************\n# main\n# ********************************************************************************************************************************************\n#\n# ============ set local time  =============================\n# \nsudo rm -f /etc/localtime \nsudo ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime\n#\n# ============ nginx =============================\n#\nsudo apt-get update\nsudo apt install nginx -y\n\n# ============ php w.o. apache =============================\n# the sequence of packets does the trick somehow\n#\nsudo apt install php7.2-fpm php-cgi -y\nsudo apt install php php-cli -y\nsudo apt install php-json php-mysql php-zip php-gd  php-mbstring php-curl php-xml php-pear php-bcmath -y\ncreate_nginx_conf\nsudo systemctl restart nginx\n#\n# ============ certbot =============================\n#\nsudo snap install core \u0026\u0026 sudo snap refresh core\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\nsudo /bin/sh -v -c \"/usr/bin/certbot --test-cert --agree-tos --email \u003cyour_email\u003e@somewhere -n --nginx --domains $NGINX_FQDN\"\n# sudo /bin/sh -v -c \"/usr/bin/certbot --agree-tos --email mvboehlen@googlemail.com -n --nginx --domains $NGINX_FQDN\"\nsudo systemctl restart nginx\n#\n# ============ phpMyAdmin =============================\n#\nsudo sh -c \"DEBIAN_FRONTEND=noninteractive apt-get -y install phpmyadmin\"\nln -s /usr/share/phpmyadmin /var/www/$NGINX_FQDN/phpmyadmin\nconfigure_myphpadmin\n#\n# ugly patch to avoid error message for empty array with count()\n# echo sudo sed -i \\\"s/|\\s*\\((count(\\$analyzed_sql_results\\['select_expr'\\]\\)/| (\\1)/g\\\" /usr/share/phpmyadmin/libraries/sql.lib.php\nsudo sed -i \"s/|\\s*\\((count(\\$analyzed_sql_results\\['select_expr'\\]\\)/| (\\1)/g\" /usr/share/phpmyadmin/libraries/sql.lib.php\n#\nsudo mysql -h \"$DB_FQDN\" -u \"$DB_USER\" -p \"$DB_PWD\" \u003c /usr/share/phpmyadmin/sql/create_tables.sql \nsudo systemctl restart nginx\n",
            "template": "#!/bin/bash\n# ********************************************************************************************************************************************\n# configure_myphpadmin\n# ********************************************************************************************************************************************\n\nexport NGINX_FQDN=\"${nginx_fqdn}\"\nexport DB_FQDN=\"${db_fqdn}\"\nexport DB_USER=\"${db_user}\"\nexport DB_PWD=\"${db_pwd}\"\n\necho \"NGINX_FQDN='$NGINX_FQDN'\"\necho \"DB_FQDN='$DB_FQDN'\"\necho \"DB_USER='$DB_USER'\"\necho \"DB_PWD='$DB_PWD'\"\n\n# ************************************************************************\nconfigure_myphpadmin() {\n\nsudo tee /etc/dbconfig-common/phpmyadmin.conf \u003c\u003cEOT\n  # automatically generated by the maintainer scripts of phpmyadmin\n  # any changes you make will be preserved, though your comments\n  # will be lost!  to change your settings you should edit this\n  # file and then run \"dpkg-reconfigure phpmyadmin\"\n  \n  # dbc_install: configure database with dbconfig-common?\n  #              set to anything but \"false\" to opt out of assistance\n  dbc_install='false'\n  \n  # dbc_upgrade: upgrade database with dbconfig-common?\n  #              set to anything but \"false\" to opt out of assistance\n  dbc_upgrade='false'\n  \n  # dbc_remove: deconfigure database with dbconfig-common?\n  #             set to anything but \"false\" to opt out of assistance\n  dbc_remove='false'\nEOT\n  \nsudo tee /etc/phpmyadmin/config-db.php \u003c\u003cEOT\n\u003c?php\n  # !!! dbname is mandatory or login won't work!!!\n  #\n  \\$dbuser='$DB_USER';\n  \\$dbpass='$DB_PWD';\n  \\$basepath='';\n  \\$dbname='phpmyadmin';\n  \\$dbserver='$DB_FQDN';\n  \\$dbport='3306';\n  \\$dbtype='mysql';\n?\u003e\nEOT\n}\n\n# ********************************************************************************************************************************************\n# create_nginx_conf\n# ********************************************************************************************************************************************\n#\ncreate_nginx_conf () {\n# with php\nsudo tee -a /etc/nginx/fastcgi_params \u003c\u003cEOT\n  fastcgi_param  SCRIPT_FILENAME    \\$document_root\\$fastcgi_script_name; \nEOT\n\nsudo tee /etc/nginx/fastcgi.conf \u003c\u003cEOT \n  # 404\n  try_files \\$fastcgi_script_name =404;\n\n  # default fastcgi_params\n  include fastcgi_params;\n\n  # fastcgi settings\n# fastcgi_pass\t\t\tunix:/run/php/php7.2-fpm.sock;\n  fastcgi_index\t\t\tindex.php;\n  fastcgi_buffers\t\t\t8 16k;\n  fastcgi_buffer_size\t\t32k;\n  fastcgi_hide_header             X-Powered-By;\n  fastcgi_hide_header             X-CF-Powered-By;\nEOT\n\nsudo tee /etc/nginx/nginx.conf \u003c\u003cEOT \n  user www-data;\n  worker_processes auto;\n  pid /run/nginx.pid;\n  include /etc/nginx/modules-enabled/*.conf;\n\n  events  {\n    worker_connections 768;\n    # multi_accept on;\n  }\n  \n  http {\n    ##\n    # Basic Settings\n    ##\n  \n    sendfile on;\n    tcp_nopush on;\n    tcp_nodelay on;\n    keepalive_timeout 65;\n    types_hash_max_size 2048;\n    # server_tokens off;\n    # server_names_hash_bucket_size 64;\n    # server_name_in_redirect off;\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n    ##\n    # SSL Settings\n    ##\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n    ssl_prefer_server_ciphers on;\n  \n    ##\n    # Logging Settings\n    ##\n    access_log /var/log/nginx/access.log;\n    error_log /var/log/nginx/error.log;\n    ##\n    # Gzip Settings\n    ##\n    gzip on;\n    # gzip_vary on;\n    # gzip_proxied any;\n    # gzip_comp_level 6;\n    # gzip_buffers 16 8k;\n    # gzip_http_version 1.1;\n    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n    ##\n    # Virtual Host Configs\n    ##\n    include /etc/nginx/conf.d/*.conf;\n    include /etc/nginx/sites-enabled/*;\n  }\nEOT\n\nsudo rm -f /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/$NGINX_FQDN\nsudo mkdir /var/www/$NGINX_FQDN\nsudo tee /etc/nginx/sites-available/$NGINX_FQDN \u003c\u003cEOT \n  # Virtual Host configuration for \n  #\n  # You can move that to a different file under sites-available/ and symlink that\n  # to sites-enabled/ to enable it.\n  #\n  server {\n\n    server_name $NGINX_FQDN;\n\n    root /var/www/$NGINX_FQDN;\n    index index.php;\n\n    location / {\n#         try_files $uri $uri/ =404;\n    }\n  \n    location ~ \\.php$ {\n      try_files \\$uri =404;\n      fastcgi_pass unix:/run/php/php7.2-fpm.sock;\n      fastcgi_index index.php;\n      fastcgi_param SCRIPT_FILENAME \\$document_root\\$fastcgi_script_name;\n      include fastcgi_params;\n      }   \n  }\nEOT\nsudo ln -s /etc/nginx/sites-available/$NGINX_FQDN /etc/nginx/sites-enabled/$NGINX_FQDN\n}\n\n# ********************************************************************************************************************************************\n# main\n# ********************************************************************************************************************************************\n#\n# ============ set local time  =============================\n# \nsudo rm -f /etc/localtime \nsudo ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime\n#\n# ============ nginx =============================\n#\nsudo apt-get update\nsudo apt install nginx -y\n\n# ============ php w.o. apache =============================\n# the sequence of packets does the trick somehow\n#\nsudo apt install php7.2-fpm php-cgi -y\nsudo apt install php php-cli -y\nsudo apt install php-json php-mysql php-zip php-gd  php-mbstring php-curl php-xml php-pear php-bcmath -y\ncreate_nginx_conf\nsudo systemctl restart nginx\n#\n# ============ certbot =============================\n#\nsudo snap install core \u0026\u0026 sudo snap refresh core\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\nsudo /bin/sh -v -c \"/usr/bin/certbot --test-cert --agree-tos --email \u003cyour_email\u003e@somewhere -n --nginx --domains $NGINX_FQDN\"\n# sudo /bin/sh -v -c \"/usr/bin/certbot --agree-tos --email mvboehlen@googlemail.com -n --nginx --domains $NGINX_FQDN\"\nsudo systemctl restart nginx\n#\n# ============ phpMyAdmin =============================\n#\nsudo sh -c \"DEBIAN_FRONTEND=noninteractive apt-get -y install phpmyadmin\"\nln -s /usr/share/phpmyadmin /var/www/$NGINX_FQDN/phpmyadmin\nconfigure_myphpadmin\n#\n# ugly patch to avoid error message for empty array with count()\n# echo sudo sed -i \\\"s/|\\s*\\((count(\\$analyzed_sql_results\\['select_expr'\\]\\)/| (\\1)/g\\\" /usr/share/phpmyadmin/libraries/sql.lib.php\nsudo sed -i \"s/|\\s*\\((count(\\$analyzed_sql_results\\['select_expr'\\]\\)/| (\\1)/g\" /usr/share/phpmyadmin/libraries/sql.lib.php\n#\nsudo mysql -h \"$DB_FQDN\" -u \"$DB_USER\" -p \"$DB_PWD\" \u003c /usr/share/phpmyadmin/sql/create_tables.sql \nsudo systemctl restart nginx\n",
            "vars": {
              "db_fqdn": "az304-mysql-srv.mysql.database.azure.com",
              "db_pwd": "JubjubBird1806!",
              "db_user": "sqladmin",
              "nginx_fqdn": "mvb4712.westeurope.cloudapp.azure.com"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_linux_virtual_machine",
      "name": "nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "azurerm_network_interface_security_group_association",
      "name": "nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "azurerm_network_security_group",
      "name": "nginx-nsg",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "azurerm_public_ip",
      "name": "nginxpublicip",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "azurerm_virtual_network",
      "name": "nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": []
    }
  ]
}
